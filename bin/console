#!/usr/bin/env php
<?php

/**
 * Copyright 2025 Alexey Kopytko <alexey@kopytko.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare(strict_types=1);

use ConsoleApp\ClassmapCommandProvider;
use ConsoleApp\ConsoleApp;
use ConsoleApp\ConfigLoader;
use Composer\Autoload\ClassLoader;

// First, load the standard autoloader to get access to Composer classes
$initialLoader = null;
foreach ([
    $GLOBALS['_composer_autoload_path'] ?? 'vendor/autoload.php',
    __DIR__ . '/../../autoload.php',
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/vendor/autoload.php',
] as $file) {
    if (!file_exists($file)) {
        continue;
    }

    $initialLoader = require $file;
    break;
}

if (null === $initialLoader) {
    fwrite(
        STDERR,
        'Please set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
        '    composer install' . PHP_EOL . PHP_EOL
    );

    exit(1);
}

$classLoader = $initialLoader;

// Now we have access to Composer classes - check for custom init
$configLoader = new ConfigLoader();
$config = $configLoader->loadConfig();

if (!empty($config['bootstrap'])) {
    foreach ((array) $config['bootstrap'] as $initScript) {
        $customLoader = $configLoader->loadCustomInit($initialLoader, $initScript);

        if ($customLoader instanceof ClassLoader) {
            $classLoader = $customLoader;
            break;
        }
    }
}

if (null === $classLoader) {
    fwrite(
        STDERR,
        'Please set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
        '    composer install' . PHP_EOL . PHP_EOL
    );

    exit(1);
}

$app = new ConsoleApp(new ClassmapCommandProvider($classLoader));
$app->run();
