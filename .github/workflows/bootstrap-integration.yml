name: Bootstrap Integration Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  bootstrap-integration:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout console library
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        coverage: none
    
    - name: Install library dependencies
      run: composer install --no-dev --optimize-autoloader
    
    - name: Create test project
      run: |
        mkdir test-project
        cd test-project
        
        # Create composer.json for test project
        cat > composer.json << 'EOF'
        {
            "name": "test/bootstrap-integration",
            "description": "Test project for bootstrap integration",
            "require": {
                "php": ">=8.2"
            },
            "autoload": {
                "psr-4": {
                    "TestApp\\": "src/"
                }
            },
            "repositories": [
                {
                    "type": "path",
                    "url": "../"
                }
            ],
            "require": {
                "sanmai/console": "*"
            },
            "extra": {
                "console": {
                    "bootstrap": ["bootstrap.php"]
                }
            }
        }
        EOF
    
    - name: Create bootstrap script
      run: |
        cd test-project
        cat > bootstrap.php << 'EOF'
        <?php
        declare(strict_types=1);
        
        // Custom error handling
        set_error_handler(function ($severity, $message, $file, $line) {
            throw new ErrorException($message, 0, $severity, $file, $line);
        });
        
        // Define constants that prove bootstrap was loaded
        define('BOOTSTRAP_LOADED', true);
        define('BOOTSTRAP_TIME', date('Y-m-d H:i:s'));
        
        // Log bootstrap execution
        file_put_contents(__DIR__ . '/bootstrap.log', "Bootstrap executed at " . BOOTSTRAP_TIME . "\n");
        
        // The autoloader is already active, just modify it
        // Note: In a real project, you might want to find the loader from spl_autoload_functions()
        // For this test, we know vendor/autoload.php was already loaded
        EOF
    
    - name: Create test command
      run: |
        cd test-project
        mkdir -p src
        cat > src/TestBootstrapCommand.php << 'EOF'
        <?php
        declare(strict_types=1);
        
        namespace TestApp;
        
        use Symfony\Component\Console\Attribute\AsCommand;
        use Symfony\Component\Console\Command\Command;
        use Symfony\Component\Console\Input\InputInterface;
        use Symfony\Component\Console\Output\OutputInterface;
        
        #[AsCommand(
            name: 'test:bootstrap',
            description: 'Tests that custom bootstrap was loaded',
        )]
        final class TestBootstrapCommand extends Command
        {
            protected function execute(InputInterface $input, OutputInterface $output): int
            {
                if (defined('BOOTSTRAP_LOADED') && BOOTSTRAP_LOADED) {
                    $output->writeln('✓ Custom bootstrap was loaded successfully!');
                    $output->writeln('Bootstrap time: ' . (defined('BOOTSTRAP_TIME') ? BOOTSTRAP_TIME : 'unknown'));
                    return Command::SUCCESS;
                }
                
                $output->writeln('✗ Custom bootstrap was NOT loaded');
                return Command::FAILURE;
            }
        }
        EOF
    
    - name: Install test project dependencies
      run: |
        cd test-project
        composer install --optimize-autoloader
    
    - name: Test console list command
      run: |
        cd test-project
        echo "=== Testing console list command ==="
        vendor/bin/console list
    
    - name: Test custom bootstrap command
      run: |
        cd test-project
        echo "=== Testing custom bootstrap command ==="
        vendor/bin/console test:bootstrap
    
    - name: Verify bootstrap log was created
      run: |
        cd test-project
        echo "=== Checking bootstrap log ==="
        if [ -f bootstrap.log ]; then
          echo "✓ Bootstrap log file exists"
          cat bootstrap.log
        else
          echo "✗ Bootstrap log file NOT found"
          exit 1
        fi
    
    - name: Test that command appears in list
      run: |
        cd test-project
        echo "=== Verifying command appears in list ==="
        if vendor/bin/console list | grep -q "test:bootstrap"; then
          echo "✓ Custom command appears in list"
        else
          echo "✗ Custom command NOT found in list"
          vendor/bin/console list
          exit 1
        fi